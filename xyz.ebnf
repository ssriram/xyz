___  ___ ___ __ ________
\  \/  /<   |  |\___   /
 >    <  \___  | /    /
/__/\_ \ / ____|/_____ \
      \/ \/           \/


lexical grammar


<program> ::= ( <tokens> | <delimiter> )*

<tokens> ::=
    <keyword> |
    <symbol> |
    <literal> |
    <operator> |
    <other>

<delimiter> ::=
    <whitespace> |
    <characterboundry> |
    <stringboundry> |
    <listboundry> |
    <vectorboundry> |
    <mapboundry>

<whitespace> ::= TAB | VTAB | FF | SP | NBSP | USP | LF | CR | LS | PS
<characterboundry> ::= {'}
<stringboundry> ::= {"} | {"""}
<listboundry> ::= {(} | {)}
<vectorboundry> ::= {[} | {,} | {]}
<mapboundry> ::= {{} | {:} | {,} | {}}

<keyword> ::= def | if | fn | with | do | cond

<symbol> ::= ( <letter> | _ | $ )( <letter> | _ | <digit> | . )*

<literal> ::=
    <numericliteral> |
    <characterliteral> |
    <stringliteral>

<numericliteral> ::= <fixnumliteral> | <flonumliteral>

<fixnumliteral> ::=
    <decimalfixnum> |
    <hexfixnum> |
    <binaryfixnum> |
    <octalfixnum>

<decimalfixnum> ::= <nonzerodigit> <digit>*
<nonzerodigit> ::= 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9
<digit> ::= 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9
<hexfixnum> ::= ( 0x|0X ) <hexdigit>*
<hexdigit> ::= 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | A | B | C | D | E | F | a | b | c | d | e | f
<binaryfixnum> ::= ( 0b | 0B ) <bit>*
<bit> ::= 0 | 1
<octalfixnum> ::= 0 <octaldigit>*
<octaldigit> ::= 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7
<flonumliteral> ::= ( <digit>* . <digit> <digit>* ( <exp> ))
<exp> ::= ( E|e ) ( +|- ) <digit> <digit>*

<characterliteral> ::= '( <characters> | <escapeseq> )+'

<characters> ::=
    <letter> |
    <digit> |
    <specialchar> |
    <punctuations> |
    <other>

<letter> ::=
    a | b | c | d | e | f | g | h | i | j | k | l | m | n | o | p | q | r | s | t | u | v | w | x | y | z |
    A | B | C | D | E | F | G | H | I | J | K | L | M | N | O | P | Q | R | S | T | U | V | W | X | Y | Z

<specialchar> ::=
<escapeseq> ::= \\ | \' | \" | \? | \a | \b | \f | \r | \t | \v | \0 | <hexescape> | <octalescape>
<hexescape> ::= \( x|X ) <hexdigit> <hexdigit>*
<octalescape> ::= \0 <octaldigit> <octaldigit>*









<null> ::= null | <numbernull> | <charnull> | <stringnull> | <sexprnull> | <vectornull> | <mapnull>


<expr> ::=
    <null> |
    <boolean> |
    <number> |
    <character> |
    <string> |
    <symbol> |
    <sexpr> |
    <list> |
    <vector> |
    <map>


